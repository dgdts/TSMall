// Code generated by hertz generator.

package main

import (
	"context"
	"fmt"
	"os"
	"path/filepath"
	"ssg/kitex-common/common/local_conf"
	"strings"

	"TSMall/biz/global_init"
	"TSMall/biz/router"
	_ "TSMall/kit/xjsoniter"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/utils"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

func env() {
	env := strings.ToLower(os.Getenv("ENV"))
	if env == "" {
		env = "dev"
	}
	_ = os.Setenv("ENV", env)
}

func main() {
	env()
	// 全局初始化，本地配置文件解析， 配置中心配置文件解析等等
	binPath, _ := filepath.Abs(filepath.Dir(os.Args[0]))
	rootPath := filepath.Dir(binPath)
	local_conf.ServerConfigPath = fmt.Sprintf("%s/configs/%s/conf.yaml", rootPath, os.Getenv("ENV"))

	// init hertz server
	h := global_init.InitServer(local_conf.GetGConf().Hertz.Service[0])

	// add a ping route to test
	h.GET("/ping", func(c context.Context, ctx *app.RequestContext) {
		ctx.JSON(consts.StatusOK, utils.H{
			"ping":   "pong",
			"pod_ip": os.Getenv("POD_IP"),
		})
	})

	// register biz router
	router.GeneratedRegister(h)
	// server start
	h.Spin()
}
